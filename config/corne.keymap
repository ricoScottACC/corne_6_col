/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
combos {
        compatible = "zmk,combos";

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <27 28>;
        };

        combo_exclam {
            bindings = <&kp LS(NUMBER_1)>;
            key-positions = <16 17>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <31 32>;
        };

        combo_caps {
            bindings = <&caps_word>;
            key-positions = <29 30>;
        };

        combo_fun {
            bindings = <&mo 4>;
            key-positions = <36 41>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        combo_quote {
            timeout-ms = <30>;
            bindings = <&kp SQT>;
            key-positions = <8 9>;
        };

        combo_tac {
            bindings = <&kp MINUS>;
            key-positions = <2 3>;
        };

        combo_mo3_1 {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };

        combo_mo3_2 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    //

    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&skq>;
        };

        rpi2: require_prior_idle2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&skq>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                alpha {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T   |_____|  Y  |  U   |  I  |  O  |  P  | DEL  |
// | TEST |  A  |  S  |  D  |  F  |  G   |_____|  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B   |_____|  N  |  M   |  ,  |  .  |  /  | SHFT |
//           | cmd/opt | shft/mo1 | BSPC |_____| SPC | mo2  | CTRL |
                        display-name = "Alpha";
                        bindings = <
   &kp ESC        &kp Q  &kp W   &kp E   &kp R   &kp T       &kp Y   &kp U   &kp I      &kp O    &kp P     &kp DEL
   &kp LC(LS(R))  &kp A  &kp S   &kp D   &kp F   &kp G       &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
   &kp LSHFT      &kp Z  &kp X   &kp C   &kp V   &kp B       &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
              &rpi2 LALT LGUI    &rpi 1 LSHFT    &kp BSPC    &kp SPACE   &mo 2   &kp LCTRL
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// | na |  na  |  na  |  na  | na  | PSTE |_____|  /  |  7  |  8  |  9  |  -  | na |
// | na | SHFT | CTRL |  ALT | GUI | COPY |_____|  .  |  4  |  5  |  6  |  +  | na |
// | na | UNDO |  na  |  na  | na  | CUT  |_____|  0  |  1  |  2  |  3  |  =  | na |
//                    |  na  |  na |  na  |_____| SPC | mo3 | DEL |
                        display-name = "NUM";
                        bindings = <
   &none    &none      &none      &none     &none     &kp LG(V)        &kp FSLH    &kp N7    &kp N8    &kp N9    &kp MINUS    &none
   &none    &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &kp LG(C)        &kp DOT     &kp N4    &kp N5    &kp N6    &kp PLUS     &none
   &none    &kp LG(Z)  &none      &none     &none     &kp LG(X)        &kp N0      &kp N1    &kp N2    &kp N3    &kp EQUAL    &none
                          	      &none     &none     &none            &kp SPACE   &mo 3     &kp DEL
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        display-name = "SYM";
                        bindings = <
   &none  &kp TILDE  &none     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND      &kp FSLH  &kp PLUS       &kp MINUS         &kp EQUAL  &none &none
   &none  &kp GRAVE  &kp PIPE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION    &kp STAR  &kp RGUI       &kp RALT          &kp RCTRL  &kp RSHFT &none
   &none  &none      &kp BSLH  &kp LBKT              &kp RBKT               &none              &none     &kp LESS_THAN  &kp GREATER_THAN  &none      &none &none
                    	     &none              &mo 3                  &kp BSPC              &kp SPACE     &none      &none
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |      | TABL |     | TABR |    |_____|    | HOME |  UP  | END  |    |
// | SHFT | CTRL | ALT | GUI  |    |_____|    | LEFT | DOWN | RGHT |    |
// |      |      |     |      |    |_____|    | PGUP |      | PGDN |    |
//               | BSP |      |    |_____|    | SPC  | DEL  |

                            display-name = "NAV";
                            bindings = <
    &none  &none      &kp LC(LS(TAB))  &none     &kp LC(TAB)  &none    &none  &kp HOME     &kp UP    &kp END        &none  &none
    &none  &kp LSHFT  &kp LCTRL        &kp LALT  &kp LGUI     &none    &none  &kp LEFT     &kp DOWN  &kp RIGHT      &none  &none
    &none  &none      &kp LA(F12)      &kp LG(LS(LBKT))       &kp LG(LS(RBKT))      &none    &none  &kp PAGE_UP  &none     &kp PAGE_DOWN  &none  &none
                                 &none  &none        &none    &none  &none    &none
                            >;
                        };

                function_layer {
// -----------------------------------------------------------------------------------------
// | BTCL | BRDN | VLDN | VLUP | BRUP |_____| F12 | F7  | F8  | F9 |    |
// | SHFT | CTRL | ALT  | GUI  |      |_____| F11 | F4  | F5  | F6 |    |
// | BT1  | BT2  | BT3  | BT4  | BT5  |_____| F10 | F1  | F2  | F3 |    |
//               | BSP  |      |      |_____|     | SPC | DEL |

                            display-name = "FUN";
                            bindings = <
    &none  &bt BT_CLR    &kp C_BRI_DN  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRI_UP    &kp F12  &kp F7     &kp F8   &kp F9  &none  &none
    &none  &kp LSHFT     &kp LCTRL     &kp LALT           &kp LGUI         &none           &kp F11  &kp F4     &kp F5   &kp F6  &none  &none
    &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4    &kp F10  &kp F1     &kp F2   &kp F3  &none  &none
                                              &none           &none            &none           &none    &none  &none
                            >;
                        };
        };
};